public void getNext(CAS aCAS) throws IOException, CollectionException {  JCas jcas;  try {    jcas = aCAS.getJCas();  } catch (CASException e) {    throw new CollectionException(e);  }  // open input stream to file  File file = (File) mFiles.get(mCurrentIndex++);  BufferedInputStream fis =          new BufferedInputStream(new FileInputStream(file));  try {    byte[] contents = new byte[(int) file.length()];    fis.read(contents);    String text;    if (mEncoding != null) {      text = new String(contents, mEncoding);    } else {      text = new String(contents);    }    // put document in CAS    jcas.setDocumentText(text);  } finally {   if (fis != null)      fis.close();  }  // set language if it was explicitly specified  //as a configuration parameter  if (mLanguage != null) {    ((DocumentAnnotation) jcas.getDocumentAnnotationFs()).          setLanguage(mLanguage);  }  // Also store location of source document in CAS.  // This information is critical if CAS Consumers will  // need to know where the original document contents  // are located.  // For example, the Semantic Search CAS Indexer  // writes this information into the search index that  // it creates, which allows applications that use the  // search index to locate the documents that satisfy  //their semantic queries.  SourceDocumentInformation srcDocInfo =          new SourceDocumentInformation(jcas);  srcDocInfo.setUri(          file.getAbsoluteFile().toURL().toString());  srcDocInfo.setOffsetInSource(0);  srcDocInfo.setDocumentSize((int) file.length());  srcDocInfo.setLastSegment(          mCurrentIndex == mFiles.size());  srcDocInfo.addToIndexes();}